# 23                       *
# 22                      * *
# 21                     *****
# 20                    *     *
# 19                   * *   * *
# 18                  ***** *****
# 17                 *           *
# 16                * *         * *
# 15               *****       *****
# 14              *     *     *     *
# 13             * *   * *   * *   * *
# 12            ***** ***** ***** *****
# 11           *                       *
# 10          * *                     * *
# 9          *****                   *****
# 8         *     *                 *     *
# 7        * *   * *               * *   * *
# 6       ***** *****             ***** *****
# 5      *           *           *           *
# 4     * *         * *         * *         * *
# 3    *****       *****       *****       *****
# 2   *     *     *     *     *     *     *     *
# 1  * *   * *   * *   * *   * *   * *   * *   * *
# 0 ***** ***** ***** ***** ***** ***** ***** *****
#        1  3  6  9
# 12 마다 1->2->2->4 2->4->4->8 3->6->6->12 ...
#

import sys


def recursion(x, y, size):
    if size == 3:
        A[x][y] = "*"
        A[x + 1][y - 1] = "*"
        A[x + 1][y + 1] = "*"
        A[x + 2][y - 2] = "*"
        A[x + 2][y - 1] = "*"
        A[x + 2][y] = "*"
        A[x + 2][y + 1] = "*"
        A[x + 2][y + 2] = "*"
    else:
        recursion(x, y, size // 2)
        recursion(x + size // 2, y - size // 2, size // 2)
        recursion(x + size // 2, y + size // 2, size // 2)


N = int(sys.stdin.readline().strip())
A = [[" "] * (2 * N - 1) for _ in range(N)]
recursion(0, N - 1, N)
for row in A:
    print(''.join(row))
